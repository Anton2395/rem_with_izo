---
version: "3.9"

services:
  postgres:
    container_name: postgres_container1
    image: postgres
    # restart: always
    environment:
      POSTGRES_USER: mvlab
      POSTGRES_PASSWORD: z1x2c3
      POSTGRES_DB: db1
      PGDATA: /data/postgres
      TZ: Europe/Minsk
    volumes:
      - postgres:/data/postgres
      #  - ./volume/DB/:/data/postgres
    ports:
      - "25432:5432"
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.2

  pgadmin:
    container_name: pgadmin_container1
    image: dpage/pgadmin4:5.0
    # restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-nr@mvlab.by}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-z1x2c3}
      TZ: Europe/Minsk

    volumes:
      - pgadmin:/root/.pgadmin
      # - ./volume/pgadmin_data/:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5051}:80"
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.3

    restart: unless-stopped

  nginx:
    container_name: nginx_server1
    image: nginx
    # restart: always
    environment:
      - TZ=Europe/Minsk
    volumes:
#      - ./temp_data:/usr/share/nginx/html
      # - web_data:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - web_data:/dat1/
      - web_rem:/dat2/
    ports:
      - "82:81"
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.4

  node-red:
    container_name: node-red1
    image: nodered/node-red:latest
    # restart: always
    environment:
      - TZ=Europe/Minsk
    ports:
      - "1880:1880"
    volumes:
      - ./node-red:/data      
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.8

  web:
    container_name: web_server1
    build: ./web
    # command: bash -c "npm install && npm run dev"
    command: bash -c "
      npm install &&
      npm run generate"
    volumes:
      - ./web:/code
      - web_data:/code/
    ports:
      - "801:80"
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.5
    # restart: unless-stopped

  web_rem:
    container_name: web_rem_server1
    build: ./web_rem
    # command: bash -c "npm install && npm run dev"
    command: bash -c "
      npm install &&
      npm run generate"
    volumes:
      - ./web_rem:/code
      - web_rem:/code/
    ports:
      - "801:80"
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.5
    # restart: unless-stopped

  opc:
    container_name: opc_server1
    build: ./opc
    command: python3 main.py
    # restart: always
    depends_on:
      - postgres
    volumes:
      - ./opc:/code
    ports:
      - 5002:5001
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.6

  api:
    container_name: api_server1
    build: ./api
    # restart: always
    command:
      bash -c
      "
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py runserver 0.0.0.0:50001"
      # gunicorn --bind 0.0.0.0:50001 project_v_0_0_1.wsgi"
    depends_on:
      - postgres
    volumes:
      - ./api:/code
    ports:
      - 50002:50001
    networks:
      mvlab_network:
        ipv4_address: 10.0.1.7
      

networks:
  mvlab_network:
    driver: bridge
    enable_ipv6: false
    ipam:
      # driver: default
      config:
        - subnet: 10.0.1.0/24
        # - gateway: '10.0.0.1'

volumes:
  postgres:
  pgadmin:
  web_data:
  web_rem:
#     api_data:
#     opc_data:
